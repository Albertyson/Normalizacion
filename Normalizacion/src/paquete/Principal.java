/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package paquete;

import edu.uci.ics.jung.algorithms.layout.FRLayout;
import edu.uci.ics.jung.algorithms.layout.Layout;
import edu.uci.ics.jung.graph.DirectedSparseGraph;
import edu.uci.ics.jung.graph.Graph;
import edu.uci.ics.jung.visualization.BasicVisualizationServer;
import edu.uci.ics.jung.visualization.decorators.ToStringLabeller;
import edu.uci.ics.jung.visualization.renderers.Renderer;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Paint;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.apache.commons.collections15.Transformer;
import org.apache.commons.collections15.functors.ConstantTransformer;

/**
 *
 * @author Alberto
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnClearDeterminantes = new javax.swing.JButton();
        btnLimpiarDeterminados = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstDeterminados = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDeterminantes = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        btnAddDeterminado = new javax.swing.JButton();
        btnAddDeterminante = new javax.swing.JButton();
        cmbDeterminantes = new javax.swing.JComboBox();
        cmbDeterminados = new javax.swing.JComboBox();
        btnAddAtributo = new javax.swing.JButton();
        txtAtributo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstAtributos = new javax.swing.JList();
        btnAgregarDF = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstDependencias = new javax.swing.JList();
        btnGrafo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtPK = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(21, 217));

        btnClearDeterminantes.setText("Limpiar");
        btnClearDeterminantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearDeterminantesMouseClicked(evt);
            }
        });

        btnLimpiarDeterminados.setText("Limpiar");
        btnLimpiarDeterminados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarDeterminadosMouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(lstDeterminados);

        jScrollPane1.setViewportView(lstDeterminantes);

        jLabel2.setText("Determina a ->");

        btnAddDeterminado.setText("Agregar");
        btnAddDeterminado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddDeterminadoMouseClicked(evt);
            }
        });

        btnAddDeterminante.setText("Agregar");
        btnAddDeterminante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddDeterminanteMouseClicked(evt);
            }
        });

        btnAddAtributo.setText("Agregar a la relaci√≥n");
        btnAddAtributo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddAtributoMouseClicked(evt);
            }
        });

        jLabel1.setText("Atributo");

        jScrollPane3.setViewportView(lstAtributos);

        btnAgregarDF.setText("Agregar Dependencia Funcional");
        btnAgregarDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarDFMouseClicked(evt);
            }
        });

        jScrollPane4.setViewportView(lstDependencias);

        btnGrafo.setText("Ver Grafo");
        btnGrafo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGrafoMouseClicked(evt);
            }
        });

        jButton1.setText("Normalizar a 3FN");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        txtPK.setEnabled(false);

        jLabel3.setText("Clave Primaria");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbDeterminantes, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAddDeterminante)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearDeterminantes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddAtributo)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnLimpiarDeterminados)
                                    .addComponent(btnAddDeterminado)
                                    .addComponent(cmbDeterminados, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregarDF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGrafo)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPK)))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAtributo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddAtributo)
                    .addComponent(jLabel1))
                .addGap(3, 3, 3)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDeterminantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDeterminados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddDeterminante)
                    .addComponent(btnAddDeterminado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiarDeterminados))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClearDeterminantes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAgregarDF)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnGrafo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Parte 1", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddAtributoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddAtributoMouseClicked
        // TODO add your handling code here
        if (!txtAtributo.getText().isEmpty()) {
            boolean existe = false;
            existe = false;
            String nombre = txtAtributo.getText();
            for (int i = 0; i < atributos.size(); i++) {
                if (atributos.get(i).equals(nombre)) {
                    JOptionPane.showMessageDialog(null, "El atributo ya existe, ingrese otro nombre...");
                    txtAtributo.setText("");
                    existe = true;
                    break;
                }
            }
            if (!existe) {
                atributos.add(nombre);
                actualizarComboBox();
                txtAtributo.setText("");
            }
        }
    }//GEN-LAST:event_btnAddAtributoMouseClicked

    private void btnAddDeterminanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddDeterminanteMouseClicked
        // TODO add your handling code here:
        if (cmbDeterminantes.getModel().getSize() > 0) {
            boolean existe = false;
            DefaultListModel modelo = new DefaultListModel();
            for (int i = 0; i < lstDeterminantes.getModel().getSize(); i++) {
                if (lstDeterminantes.getModel().getElementAt(i).equals(cmbDeterminantes.getSelectedItem())) {
                    existe = true;
                }
                modelo.addElement(lstDeterminantes.getModel().getElementAt(i));
            }
            if (!existe) {
                ((DefaultListModel) modelo).addElement(cmbDeterminantes.getSelectedItem());
                lstDeterminantes.setModel(modelo);
            }
        }
    }//GEN-LAST:event_btnAddDeterminanteMouseClicked

    private void btnAddDeterminadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddDeterminadoMouseClicked
        // TODO add your handling code here:
        if (cmbDeterminados.getModel().getSize() > 0) {
            boolean existe = false;
            DefaultListModel modelo = new DefaultListModel();
            for (int i = 0; i < lstDeterminados.getModel().getSize(); i++) {
                if (lstDeterminados.getModel().getElementAt(i).equals(cmbDeterminados.getSelectedItem())) {
                    existe = true;
                }
                modelo.addElement(lstDeterminados.getModel().getElementAt(i));
            }
            if (!existe) {
                ((DefaultListModel) modelo).addElement(cmbDeterminados.getSelectedItem());
                lstDeterminados.setModel(modelo);
            }
        }
    }//GEN-LAST:event_btnAddDeterminadoMouseClicked

    private void btnLimpiarDeterminadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarDeterminadosMouseClicked
        // TODO add your handling code here:
        DefaultListModel modelo = new DefaultListModel();
        lstDeterminados.setModel(modelo);
    }//GEN-LAST:event_btnLimpiarDeterminadosMouseClicked

    private void btnClearDeterminantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearDeterminantesMouseClicked
        // TODO add your handling code here:
        DefaultListModel modelo = new DefaultListModel();
        lstDeterminantes.setModel(modelo);
    }//GEN-LAST:event_btnClearDeterminantesMouseClicked

    private void btnAgregarDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarDFMouseClicked
        // TODO add your handling code here:
        if (lstDeterminantes.getModel().getSize() > 0 && lstDeterminantes.getModel().getSize() > 0) {

            HashSet<String> determinante = new HashSet();
            HashSet<String> determinado = new HashSet();
            String p = "", h = "";
            for (int i = 0; i < lstDeterminantes.getModel().getSize(); i++) {
                for (int j = 0; j < atributos.size(); j++) {
                    if (lstDeterminantes.getModel().getElementAt(i).equals(atributos.get(j))) {
                        determinante.add(atributos.get(j));
                    }
                }
            }
            for (int i = 0; i < lstDeterminados.getModel().getSize(); i++) {
                for (int j = 0; j < atributos.size(); j++) {
                    if (lstDeterminados.getModel().getElementAt(i).equals(atributos.get(j))) {
                        determinado.add(atributos.get(j));
                    }
                }
            }
            //Si la key ya existe entonces agregar "determinado" al valor de esa key
            if (m.containsKey(determinante)) {
                HashSet<String> temp = m.get(determinante);
                temp.addAll(determinado);
                m.put(determinante, temp);
            } //Si la key no existe
            else {
                m.put(determinante, determinado);
            }
            //Llenar el JList
            DefaultListModel modelo = new DefaultListModel();
            Set set = m.entrySet();
            Iterator it = set.iterator();
            while (it.hasNext()) {
                Map.Entry entry = (Map.Entry) it.next();
                modelo.addElement(entry.getKey() + "‚Üí" + entry.getValue());
            }
            lstDependencias.setModel(modelo);
            lstDeterminantes.setModel(new DefaultListModel());
            lstDeterminados.setModel(new DefaultListModel());

        }
    }//GEN-LAST:event_btnAgregarDFMouseClicked

    private void btnGrafoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGrafoMouseClicked
        // TODO add your handling code here:
        /*Layout<vertice, String> layout = new FRLayout<vertice, String>(g);
        
         layout.setSize(
         new Dimension(600, 480));
         BasicVisualizationServer<vertice, String> vv = new BasicVisualizationServer<vertice, String>(layout);
         Transformer<vertice, Paint> vertexPaint = new Transformer<vertice, Paint>() {
         public Paint transform(vertice i) {
         return i.color;
         }
         };
         vv.getRenderContext().setEdgeDrawPaintTransformer(new ConstantTransformer(Color.white));
         vv.getRenderContext().setEdgeStrokeTransformer(new ConstantTransformer(new BasicStroke(2.5f)));
         vv.getRenderContext().setVertexFillPaintTransformer((Transformer<vertice, java.awt.Paint>) vertexPaint);
         vv.setBackground(Color.GRAY);
         vv.getRenderContext().setVertexLabelTransformer(new ToStringLabeller<vertice>());
         vv.getRenderer().getVertexLabelRenderer().setPosition(Renderer.VertexLabel.Position.CNTR);
         vv.setPreferredSize(new Dimension(600, 480)); //Sets the viewing area size
         JFrame frame = new JFrame("Simple Graph View");
         frame.getContentPane().add(vv);
         frame.pack();
        
         frame.setVisible(true);*/
        Set set = m.entrySet();
        Iterator it = set.iterator();
        while (it.hasNext()) {
            Map.Entry entry = (Map.Entry) it.next();
            System.out.println(entry.getKey() + " : " + entry.getValue());
        }
        /*while(m.elements().hasMoreElements()){
         System.out.println(((vertice)m.elements().nextElement()).nombre);
            
         }*/

    }//GEN-LAST:event_btnGrafoMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void actualizarComboBox() {
        DefaultListModel mod = new DefaultListModel();
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        DefaultComboBoxModel modelo1 = new DefaultComboBoxModel();
        for (int i = 0; i < atributos.size(); i++) {
            modelo.addElement(atributos.get(i));
            modelo1.addElement(atributos.get(i));
            mod.addElement(atributos.get(i));
        }
        cmbDeterminantes.setModel(modelo);
        cmbDeterminados.setModel(modelo1);
        lstAtributos.setModel(mod);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAtributo;
    private javax.swing.JButton btnAddDeterminado;
    private javax.swing.JButton btnAddDeterminante;
    private javax.swing.JButton btnAgregarDF;
    private javax.swing.JButton btnClearDeterminantes;
    private javax.swing.JButton btnGrafo;
    private javax.swing.JButton btnLimpiarDeterminados;
    private javax.swing.JComboBox cmbDeterminados;
    private javax.swing.JComboBox cmbDeterminantes;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList lstAtributos;
    private javax.swing.JList lstDependencias;
    private javax.swing.JList lstDeterminados;
    private javax.swing.JList lstDeterminantes;
    private javax.swing.JTextField txtAtributo;
    private javax.swing.JTextField txtPK;
    // End of variables declaration//GEN-END:variables
    Graph g = new DirectedSparseGraph();
    ArrayList<String> atributos = new ArrayList();
    Hashtable<HashSet, HashSet> m = new Hashtable<>();
}
